DROP TABLE IF EXISTS GROUPS CASCADE;

CREATE TABLE IF NOT EXISTS GROUPS
	(
	ID INTEGER NOT NULL,
	Name character(6) COLLATE pg_catalog.default NOT NULL,
		CONSTRAINT GROUPS_pkey PRIMARY KEY (ID)
	)

	TABLESPACE pg_default;

DROP TABLE IF EXISTS STUDENTS CASCADE;

CREATE TABLE IF NOT EXISTS STUDENTS
	(
	ID integer NOT NULL,
    Group_ID integer REFERENCES GROUPS(ID),
    First_Name character(10) NOT NULL,
    Last_Name character(10) NOT NULL,
    User_ID INTEGER,
    CONSTRAINT "STUDENT_pkey" PRIMARY KEY (ID)
	)

	TABLESPACE pg_default;


DROP TABLE IF EXISTS COURSES CASCADE;

CREATE TABLE IF NOT EXISTS COURSES
	(
	ID INTEGER NOT NULL PRIMARY KEY,
	Name character(18) COLLATE pg_catalog.default NOT NULL UNIQUE,
	Description character(75) COLLATE pg_catalog.default NOT NULL
	)
	
	TABLESPACE pg_default;


DROP TABLE IF EXISTS LECTURERS CASCADE;

CREATE TABLE IF NOT EXISTS LECTURERS
	(
	ID INTEGER NOT NULL,
	First_Name CHARACTER(10)  NOT NULL,
	Last_Name CHARACTER(10) NOT NULL,
	Course_ID INTEGER,
    User_ID INTEGER,
	CONSTRAINT "lECTURER_pkey" PRIMARY KEY (ID)
	)

	TABLESPACE pg_default;


DROP TABLE IF EXISTS LECTURES CASCADE;

CREATE TABLE IF NOT EXISTS LECTURES
	(
	ID INTEGER NOT NULL PRIMARY KEY,
	Day_Number INTEGER NOT NULL,
	Pair INTEGER NOT NULL,
	Start CHARACTER(5) NOT NULL,
	End_Time CHARACTER(5) NOT NULL,
	Day CHARACTER(10) NOT NULL,
	Course INTEGER NOT NULL,
	FOREIGN KEY (Course) REFERENCES COURSES (ID) ON DELETE CASCADE
	)
	
	TABLESPACE pg_default;


DROP TABLE IF EXISTS USERS CASCADE;

CREATE TABLE IF NOT EXISTS USERS
(
    ID integer NOT NULL,
    Login character(8),
    Password character(60) NOT NULL,
    User_Role character(10) NOT NULL,
    CONSTRAINT usr_pkey PRIMARY KEY (ID)
)

    TABLESPACE pg_default;


DROP TABLE IF EXISTS STAFF CASCADE;

CREATE TABLE IF NOT EXISTS STAFF
(
    ID INTEGER NOT NULL,
    First_Name CHARACTER(10)  NOT NULL,
    Last_Name CHARACTER(10) NOT NULL,
    Position CHARACTER(20) NOT NULL,
    User_ID integer REFERENCES USERS(ID),
    CONSTRAINT "STAFF_pkey" PRIMARY KEY (ID)
)

    TABLESPACE pg_default;


DROP TABLE IF EXISTS LECTUREGROUP CASCADE;

CREATE TABLE IF NOT EXISTS LECTUREGROUP
	(
	Group_ID INTEGER NOT NULL REFERENCES GROUPS,
	Lecture_ID INTEGER NOT NULL REFERENCES LECTURES
	)

	TABLESPACE pg_default;


DROP TABLE IF EXISTS GROUPS_COURSES_RELATIONS CASCADE;

CREATE TABLE IF NOT EXISTS GROUPS_COURSES_RELATIONS
(
    Group_ID INTEGER REFERENCES GROUPS(ID),
    Course_ID INTEGER REFERENCES COURSES(ID)
)

    TABLESPACE pg_default;